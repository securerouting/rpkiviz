# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-18 17:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import viz.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=1)),
                ('prefix_min', viz.models.IPAddressField(db_index=True)),
                ('prefix_max', viz.models.IPAddressField(db_index=True)),
            ],
            options={
                'ordering': ('prefix_min',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ASRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.PositiveIntegerField()),
                ('max', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('min', 'max'),
            },
        ),
        migrations.CreateModel(
            name='CRL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256', models.SlugField()),
                ('this_update', models.DateTimeField()),
                ('next_update', models.DateTimeField()),
                ('aki', models.SlugField()),
                ('crl_number', viz.models.SerialNumber()),
            ],
            bases=(models.Model, viz.models.ValidationMixin),
        ),
        migrations.CreateModel(
            name='Epoch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ghostbuster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256', models.SlugField()),
                ('ski', models.SlugField()),
                ('aki', models.SlugField(null=True)),
                ('subject_name', models.CharField(max_length=66)),
                ('not_before', models.DateTimeField()),
                ('not_after', models.DateTimeField()),
                ('serial', viz.models.SerialNumber()),
                ('aia_uri', models.CharField(max_length=255, null=True)),
                ('full_name', models.CharField(max_length=40)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', viz.models.TelephoneField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, viz.models.ValidationMixin),
        ),
        migrations.CreateModel(
            name='Manifest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256', models.SlugField()),
                ('ski', models.SlugField()),
                ('aki', models.SlugField(null=True)),
                ('subject_name', models.CharField(max_length=66)),
                ('not_before', models.DateTimeField()),
                ('not_after', models.DateTimeField()),
                ('serial', viz.models.SerialNumber()),
                ('aia_uri', models.CharField(max_length=255, null=True)),
                ('this_update', models.DateTimeField()),
                ('next_update', models.DateTimeField()),
                ('manifest_number', viz.models.SerialNumber()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, viz.models.ValidationMixin),
        ),
        migrations.CreateModel(
            name='ResourceCert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256', models.SlugField()),
                ('ski', models.SlugField()),
                ('aki', models.SlugField(null=True)),
                ('subject_name', models.CharField(max_length=66)),
                ('not_before', models.DateTimeField()),
                ('not_after', models.DateTimeField()),
                ('serial', viz.models.SerialNumber()),
                ('aia_uri', models.CharField(max_length=255, null=True)),
                ('inherit_asn', models.BooleanField(default=False)),
                ('inherit_v4', models.BooleanField(default=False)),
                ('inherit_v6', models.BooleanField(default=False)),
                ('addresses', models.ManyToManyField(to='viz.AddressRange')),
                ('asns', models.ManyToManyField(to='viz.ASRange')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, viz.models.ValidationMixin),
        ),
        migrations.CreateModel(
            name='ROA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256', models.SlugField()),
                ('ski', models.SlugField()),
                ('aki', models.SlugField(null=True)),
                ('subject_name', models.CharField(max_length=66)),
                ('not_before', models.DateTimeField()),
                ('not_after', models.DateTimeField()),
                ('serial', viz.models.SerialNumber()),
                ('aia_uri', models.CharField(max_length=255, null=True)),
                ('asid', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('asid',),
            },
            bases=(models.Model, viz.models.ValidationMixin),
        ),
        migrations.CreateModel(
            name='ROAPrefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=1)),
                ('prefix_min', viz.models.IPAddressField(db_index=True)),
                ('prefix_max', viz.models.IPAddressField(db_index=True)),
                ('max_length', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ('prefix_min',),
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(db_index=True, max_length=79, unique=True)),
                ('status', models.CharField(max_length=255)),
                ('kind', models.PositiveSmallIntegerField(choices=[(0, b'good'), (1, b'warn'), (2, b'bad')])),
            ],
        ),
        migrations.CreateModel(
            name='URI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='viz.Epoch')),
                ('statuses', models.ManyToManyField(to='viz.Status')),
                ('uri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='viz.URI')),
            ],
        ),
        migrations.AddField(
            model_name='roa',
            name='prefixes',
            field=models.ManyToManyField(related_name='roas', to='viz.ROAPrefix'),
        ),
        migrations.AddField(
            model_name='roa',
            name='validation',
            field=models.ManyToManyField(to='viz.Validation'),
        ),
        migrations.AddField(
            model_name='resourcecert',
            name='crldp',
            field=models.ManyToManyField(related_name='crldp', to='viz.URI'),
        ),
        migrations.AddField(
            model_name='resourcecert',
            name='manifest_uri',
            field=models.ManyToManyField(related_name='manifest_uri', to='viz.URI'),
        ),
        migrations.AddField(
            model_name='resourcecert',
            name='sia_directory_uri',
            field=models.ManyToManyField(related_name='sia_directory_uri', to='viz.URI'),
        ),
        migrations.AddField(
            model_name='resourcecert',
            name='validation',
            field=models.ManyToManyField(to='viz.Validation'),
        ),
        migrations.AddField(
            model_name='manifest',
            name='validation',
            field=models.ManyToManyField(to='viz.Validation'),
        ),
        migrations.AddField(
            model_name='ghostbuster',
            name='validation',
            field=models.ManyToManyField(to='viz.Validation'),
        ),
        migrations.AddField(
            model_name='crl',
            name='validation',
            field=models.ManyToManyField(to='viz.Validation'),
        ),
    ]
